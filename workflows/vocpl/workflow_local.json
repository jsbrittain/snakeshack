[
    {
        "id": "idcode",
        "name": "(vocpl) Provide Seeds",
        "type": "source",
        "config": {
            "snakefile": "/Users/jsb/repos/jsbrittain/snakeshack/workflows/vocpl/sources/provide_seeds/workflow/Snakefile",
            "config": {
                "output_namespace": "out"
            }
        }
    },
    {
        "id": "idcode",
        "name": "(vocpl) Nextalign",
        "type": "module",
        "config": {
            "snakefile": "/Users/jsb/repos/jsbrittain/snakeshack/workflows/vocpl/modules/nextalign/workflow/Snakefile",
            "config": {
                "input_namespace": "in",
                "output_namespace": "out",
                "params": {
                    "reference": "resources/reference.fasta",
                    "genemap": "resources/genemap.gff",
                    "genes": "E,M,N,ORF1a,ORF1b,ORF3a,ORF6,ORF7a,ORF7b,ORF8,ORF9b,S",
                    "subsample_prealign_fasta": "subsample_aln.fasta"
                }
            }
        }
    },
    {
        "id": "idcode",
        "name": "(vocpl) Subsample Alignment",
        "type": "module",
        "config": {
            "snakefile": "/Users/jsb/repos/jsbrittain/snakeshack/workflows/vocpl/modules/subsample_alignment/workflow/Snakefile",
            "config": {
                "input_namespace": "in",
                "output_namespace": "out",
                "params": {
                    "n_random": 50,
                    "master_fasta": "resources/beta.fasta",
                    "master_metadata": "resources/beta.metadata.tsv",
                    "seeds_file": "seeds.txt"
                }
            }
        }
    },
    {
        "id": "idcode",
        "name": "(vocpl) ML Tree",
        "type": "module",
        "config": {
            "snakefile": "/Users/jsb/repos/jsbrittain/snakeshack/workflows/vocpl/modules/ml_tree/workflow/Snakefile",
            "config": {
                "input_namespace": "in",
                "output_namespace": "out",
                "params": {
                    "method": "iqtree",
                    "outgroup_fasta": "",
                    "fasttree": {
                        "gtr": true,
                        "boot": 0,
                        "flags": ""
                    },
                    "iqtree": {
                        "nt": "AUTO",
                        "m": "gtr",
                        "ninit": 100,
                        "me": 0.01,
                        "b": 0,
                        "flags": ""
                    }
                }
            }
        }
    },
    {
        "id": "idcode",
        "name": "(vocpl) TreeTime",
        "type": "module",
        "config": {
            "snakefile": "/Users/jsb/repos/jsbrittain/snakeshack/workflows/vocpl/modules/treetime/workflow/Snakefile",
            "config": {
                "input_namespace": "in",
                "output_namespace": "out",
                "params": {
                    "master_metadata": "resources/beta.metadata.tsv",
                    "treetime": {
                        "init": {
                            "clock_rate": 0.0008,
                            "clock_std_dev": 0.00002,
                            "reroot": "oldest"
                        },
                        "iter": {
                            "max_iter": 10,
                            "max_outliers": 100
                        }
                    }
                }
            }
        }
    },
    {
        "name": "Join [(vocpl) TreeTime]",
        "type": "connector",
        "config": {
            "map": [
                "(vocpl) ML Tree",
                "(vocpl) TreeTime"
            ]
        }
    },
    {
        "name": "Join [(vocpl) ML Tree]",
        "type": "connector",
        "config": {
            "map": [
                "(vocpl) Nextalign",
                "(vocpl) ML Tree"
            ]
        }
    },
    {
        "name": "Join [(vocpl) Nextalign]",
        "type": "connector",
        "config": {
            "map": [
                "(vocpl) Subsample Alignment",
                "(vocpl) Nextalign"
            ]
        }
    },
    {
        "name": "Join [(vocpl) Subsample Alignment]",
        "type": "connector",
        "config": {
            "map": [
                "(vocpl) Provide Seeds",
                "(vocpl) Subsample Alignment"
            ]
        }
    }
]
